Program
  MethodDecl
    Type
      INT
    T_IDENTIFIER
    (
    FormalParams
      FormalParam
        Type
          INT
        T_IDENTIFIER
      ,
      FormalParam
        Type
          INT
        T_IDENTIFIER
    )
    Block
      BEGIN
      Statement
        LocalVarDecl
          Type
            INT
          T_IDENTIFIER
          ;
      Statement
        AssignStmt
          T_IDENTIFIER
          :=
          Expression
            MultiplicativeExpr
              PrimaryExpr
                T_IDENTIFIER
              *
              PrimaryExpr
                T_IDENTIFIER
            -
            MultiplicativeExpr
              PrimaryExpr
                T_IDENTIFIER
              *
              PrimaryExpr
                T_IDENTIFIER
          ;
      Statement
        ReturnStmt
          RETURN
          Expression
            MultiplicativeExpr
              PrimaryExpr
                T_IDENTIFIER
          ;
      END
  MethodDecl
    Type
      INT
    T_IDENTIFIER
    (
    FormalParams
      FormalParam
        Type
          INT
        T_IDENTIFIER
    )
    Block
      BEGIN
      Statement
        IfStmt
          IF
          (
          BoolExpression
            Expression
              MultiplicativeExpr
                PrimaryExpr
                  T_IDENTIFIER
            ==
            Expression
              MultiplicativeExpr
                PrimaryExpr
                  T_INT_LITERAL
          )
          Statement
            ReturnStmt
              RETURN
              Expression
                MultiplicativeExpr
                  PrimaryExpr
                    T_INT_LITERAL
              ;
          ELSE
          Statement
            ReturnStmt
              RETURN
              Expression
                MultiplicativeExpr
                  PrimaryExpr
                    T_IDENTIFIER
                  *
                  PrimaryExpr
                    T_IDENTIFIER
                    (
                    ActualParams
                      T_IDENTIFIER
                      Expression
                        MultiplicativeExpr
                          PrimaryExpr
                        -
                        MultiplicativeExpr
                          PrimaryExpr
                            T_INT_LITERAL
                    )
              ;
      END
  MethodDecl
    Type
      INT
    T_IDENTIFIER
    (
    FormalParams
      FormalParam
        Type
          INT
        T_IDENTIFIER
    )
    Block
      BEGIN
      Statement
        IfStmt
          IF
          (
          BoolExpression
            Expression
              MultiplicativeExpr
                PrimaryExpr
                  T_IDENTIFIER
            ==
            Expression
              MultiplicativeExpr
                PrimaryExpr
                  T_INT_LITERAL
          )
          Statement
            ReturnStmt
              RETURN
              Expression
                MultiplicativeExpr
                  PrimaryExpr
                    T_INT_LITERAL
              ;
          ELSE
          Statement
            IfStmt
              IF
              (
              BoolExpression
                Expression
                  MultiplicativeExpr
                    PrimaryExpr
                      T_IDENTIFIER
                ==
                Expression
                  MultiplicativeExpr
                    PrimaryExpr
                      T_INT_LITERAL
              )
              Statement
                ReturnStmt
                  RETURN
                  Expression
                    MultiplicativeExpr
                      PrimaryExpr
                        T_INT_LITERAL
                  ;
              ELSE
              Statement
                ReturnStmt
                  RETURN
                  Expression
                    MultiplicativeExpr
                      PrimaryExpr
                        T_IDENTIFIER
                        (
                        ActualParams
                          T_IDENTIFIER
                          Expression
                            MultiplicativeExpr
                              PrimaryExpr
                            -
                            MultiplicativeExpr
                              PrimaryExpr
                                T_INT_LITERAL
                        )
                    +
                    MultiplicativeExpr
                      PrimaryExpr
                        T_IDENTIFIER
                        (
                        ActualParams
                          T_IDENTIFIER
                          Expression
                            MultiplicativeExpr
                              PrimaryExpr
                            -
                            MultiplicativeExpr
                              PrimaryExpr
                                T_INT_LITERAL
                        )
                  ;
      END
  MethodDecl
    Type
      INT
    MAIN
    T_IDENTIFIER
    (
    FormalParams
    )
    Block
      BEGIN
      Statement
        LocalVarDecl
          Type
            INT
          T_IDENTIFIER
          ;
      Statement
        ReadStmt
          READ
          (
          T_IDENTIFIER
          ,
          T_STRING_LITERAL
          )
          ;
      Statement
        LocalVarDecl
          Type
            INT
          T_IDENTIFIER
          ;
      Statement
        ReadStmt
          READ
          (
          T_IDENTIFIER
          ,
          T_STRING_LITERAL
          )
          ;
      Statement
        LocalVarDecl
          Type
            INT
          T_IDENTIFIER
          ;
      Statement
        AssignStmt
          T_IDENTIFIER
          :=
          Expression
            MultiplicativeExpr
              PrimaryExpr
                T_IDENTIFIER
                (
                ActualParams
                  T_IDENTIFIER
                  Expression
                    MultiplicativeExpr
                      PrimaryExpr
                  ,
                  Expression
                    MultiplicativeExpr
                      PrimaryExpr
                        T_IDENTIFIER
                )
            +
            MultiplicativeExpr
              PrimaryExpr
                T_IDENTIFIER
                (
                ActualParams
                  T_IDENTIFIER
                  Expression
                    MultiplicativeExpr
                      PrimaryExpr
                  ,
                  Expression
                    MultiplicativeExpr
                      PrimaryExpr
                        T_IDENTIFIER
                )
          ;
      Statement
        WriteStmt
          WRITE
          (
          Expression
            MultiplicativeExpr
              PrimaryExpr
                T_IDENTIFIER
          ,
          T_STRING_LITERAL
          )
          ;
      Statement
        LocalVarDecl
          Type
            INT
          T_IDENTIFIER
          ;
      Statement
        AssignStmt
          T_IDENTIFIER
          :=
          Expression
            MultiplicativeExpr
              PrimaryExpr
                T_IDENTIFIER
                (
                ActualParams
                  T_IDENTIFIER
                  Expression
                    MultiplicativeExpr
                      PrimaryExpr
                )
          ;
      Statement
        WriteStmt
          WRITE
          (
          Expression
            MultiplicativeExpr
              PrimaryExpr
                T_IDENTIFIER
          ,
          T_STRING_LITERAL
          )
          ;
      Statement
        LocalVarDecl
          Type
            INT
          T_IDENTIFIER
          ;
      Statement
        AssignStmt
          T_IDENTIFIER
          :=
          Expression
            MultiplicativeExpr
              PrimaryExpr
                T_IDENTIFIER
                (
                ActualParams
                  T_IDENTIFIER
                  Expression
                    MultiplicativeExpr
                      PrimaryExpr
                )
          ;
      Statement
        WriteStmt
          WRITE
          (
          Expression
            MultiplicativeExpr
              PrimaryExpr
                T_IDENTIFIER
          ,
          T_STRING_LITERAL
          )
          ;
      END
